# Generated by Django 5.1.5 on 2025-01-24 21:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('name', models.CharField(help_text="Don't use / in the name.", max_length=50, primary_key=True, serialize=False)),
                ('count', models.PositiveIntegerField()),
                ('percentage', models.FloatField(default=0.0, help_text='Enter a number between 0 to 100.')),
            ],
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('WORKSHOP', 'WORKSHOP'), ('TALK', 'TALK')], max_length=30)),
                ('title', models.CharField(max_length=100)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('description', models.TextField()),
                ('capacity', models.IntegerField()),
                ('cost', models.FloatField()),
                ('is_registration_active', models.BooleanField(default=True)),
                ('presentation_link', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.FloatField()),
                ('payment_state', models.CharField(choices=[('COMPLETED', 'COMPLETED'), ('PENDING', 'PENDING'), ('FAILED', 'FAILED')], default='PENDING', max_length=10)),
                ('payment_link', models.URLField(null=True)),
                ('paymentID', models.CharField(max_length=42, null=True)),
                ('trackID', models.CharField(max_length=20, null=True)),
                ('verifyID', models.CharField(max_length=20, null=True)),
                ('hashed_card_number', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('verified_date', models.DateTimeField(blank=True, null=True)),
                ('coupon', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_state', models.CharField(choices=[('COMPLETED', 'COMPLETED'), ('PENDING', 'PENDING'), ('FAILED', 'FAILED')], default='PENDING', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to=settings.AUTH_USER_MODEL)),
                ('presentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='shop.presentation')),
            ],
        ),
        migrations.CreateModel(
            name='Presenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'unique_together': {('first_name', 'last_name')},
            },
        ),
        migrations.AddField(
            model_name='presentation',
            name='presenters',
            field=models.ManyToManyField(related_name='presentations', to='shop.presenter'),
        ),
    ]
